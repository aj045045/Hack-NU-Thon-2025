generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id                   String           @id @default(auto()) @map("_id") @db.ObjectId
  name                 String
  email                String           @unique
  password             String
  accountNumber        String           @unique
  accountType          AccountType
  maxAmountLimit       Float?
  transactionsSent     Transaction[]    @relation("SentTransactions")
  transactionsReceived Transaction[]    @relation("ReceivedTransactions")
  fraudReports         FraudDetection[]
  isAdmin              Boolean          @default(false)

  @@map("users")
}

model Transaction {
  id                    String          @id @default(auto()) @map("_id") @db.ObjectId
  senderId              String          @db.ObjectId
  receiverId            String          @db.ObjectId
  sender                User            @relation("SentTransactions", fields: [senderId], references: [id])
  receiver              User            @relation("ReceivedTransactions", fields: [receiverId], references: [id])
  senderAccountNumber   String
  receiverAccountNumber String
  amount                Float
  transactionDateTime   DateTime        @default(now())
  transactionMode       TransactionMode

  fraudDetection FraudDetection?

  @@index([senderAccountNumber])
  @@index([receiverAccountNumber])
  @@map("transactions")
}

model FraudDetection {
  id            String       @id @default(auto()) @map("_id") @db.ObjectId
  transactionId String       @unique @db.ObjectId
  userId        String       @db.ObjectId
  fraudReason   String
  fraudScore    Float
  flaggedAt     DateTime     @default(now())
  reviewStatus  ReviewStatus

  transaction Transaction @relation(fields: [transactionId], references: [id], onDelete: Cascade)
  user        User        @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("fraud_detection")
}

enum TransactionMode {
  NEFT
  UPI
  IMPS
  RTGS
  BANK_TRANSFER
}

enum AccountType {
  SAVINGS
  CURRENT
  BUSINESS
}

enum ReviewStatus {
  PENDING
  REVIEWED
  FRAUD_CONFIRMED
  FALSE_ALARM
}
